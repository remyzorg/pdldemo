(* This file was generated by Ocsigen Start.
   Feel free to use it, modify it, and redistribute it as you wish. *)

let%shared () =
  (* Registering services. Feel free to customize handlers. *)
  Eliom_registration.Action.register
    ~service:Os_services.set_personal_data_service
    Pdldemo_handlers.set_personal_data_handler;

  Eliom_registration.Redirection.register
    ~service:Os_services.set_password_service
    Pdldemo_handlers.set_password_handler;

  Eliom_registration.Action.register
    ~service:Os_services.forgot_password_service
    Pdldemo_handlers.forgot_password_handler;

  Eliom_registration.Action.register
    ~service:Os_services.preregister_service
    Pdldemo_handlers.preregister_handler;

  Eliom_registration.Action.register
    ~service:Os_services.sign_up_service
    Os_handlers.sign_up_handler;

  Eliom_registration.Action.register
    ~service:Os_services.connect_service
    Os_handlers.connect_handler;

  Eliom_registration.Unit.register
    ~service:Os_services.disconnect_service
    (Os_handlers.disconnect_handler ~main_page:true);

  Eliom_registration.Any.register
    ~service:Os_services.action_link_service
    (Os_session.Opt.connected_fun
       Pdldemo_handlers.action_link_handler);

  Eliom_registration.Action.register
    ~service:Os_services.add_email_service
    Os_handlers.add_email_handler;

  Eliom_registration.Action.register
    ~service:Os_services.update_language_service
    Pdldemo_handlers.update_language_handler;

  Pdldemo_base.App.register
    ~service:Os_services.main_service
    (Pdldemo_page.Opt.connected_page Pdldemo_handlers.main_service_handler);

  Pdldemo_base.App.register
    ~service:Pdldemo_services.about_service
    (Pdldemo_page.Opt.connected_page Pdldemo_handlers.about_handler);

  Pdldemo_base.App.register
    ~service:Pdldemo_services.settings_service
    (Pdldemo_page.Opt.connected_page Pdldemo_handlers.settings_handler)

let%server () =
  Eliom_registration.Ocaml.register
    ~service:Pdldemo_services.upload_user_avatar_service
    (Os_session.connected_fun Pdldemo_handlers.upload_user_avatar_handler)


let%shared handler myid_o () () =
  let open Eliom_content.Html.D in
  Pdldemo_container.page
    ~a:[ a_class ["os-page-demo"] ]
    myid_o
    [ h2 [%i18n general_principles]
    ; p [%i18n demo_intro_1]
    ; p [%i18n demo_intro_2]
    ; p [%i18n demo_widget_ot]
    ; p [%i18n demo_widget_see_drawer]
    ; p [%i18n demo_widget_feel_free]
    ; p [%i18n demo_intro_3]
    ]


let%shared () =
  let open Eliom_content.Html.D in
  let registerDemo (module D : Pdldemo_tools.Page) =
    Pdldemo_base.App.register
      ~service:D.service
      (Pdldemo_page.Opt.connected_page @@ fun myid_o () () ->
        let%lwt p = D.page () in
        Pdldemo_container.page
          ~a:[a_class [D.page_class]]
          myid_o p)
  in
  List.iter registerDemo Pdldemo_tools.demos;
  Pdldemo_base.App.register
    ~service:Pdldemo_services.pdldemo_service
    (Pdldemo_page.Opt.connected_page handler)


(* Print more debugging information when <debugmode/> is in config file
   (DEBUG = yes in Makefile.options).
   Example of use:
   let section = Lwt_log.Section.make "Pdldemo:sectionname"
   ...
   Lwt_log.ign_info ~section "This is an information";
   (or ign_debug, ign_warning, ign_error etc.)
 *)
let%server _ =
  if Eliom_config.get_debugmode ()
  then begin
    ignore
      [%client (
        (* Eliom_config.debug_timings := true; *)
        (* Lwt_log_core.add_rule "eliom:client*" Lwt_log.Debug; *)
        (* Lwt_log_core.add_rule "os*" Lwt_log.Debug; *)
        Lwt_log_core.add_rule "Pdldemo*" Lwt_log.Debug
        (* Lwt_log_core.add_rule "*" Lwt_log.Debug *)
        : unit ) ];
    (* Lwt_log_core.add_rule "*" Lwt_log.Debug *)
    Lwt_log_core.add_rule "Pdldemo*" Lwt_log.Debug
  end
